/* Wicket's Vanilla CSS */
/* MDP JS widgets doesn't adhere to everything under .wicket */
/* But they provide another class we can target: .wicket__widgets */

/* MDP JS Widgets: any widget */
.wicket__widgets {
  fieldset {
    legend {
      color: var(--pico-contrast-inverse);
    }
  }

  /* MDP JS Widgets: Form Actions */
  .form-actions, .col-sm-12 {
    display: flex;
    gap: var(--pico-spacing);
    align-items: center;
    justify-content: space-between;

    /* Button Styling */
    .btn {
      background-color: var(--pico-secondary);
        color: var(--pico-secondary-inverse);
        border: 1px solid var(--pico-secondary);
        padding: var(--pico-form-element-spacing-vertical) var(--pico-form-element-spacing-horizontal);
        border-radius: var(--pico-border-radius);
      text-decoration: none;
      cursor: pointer;
      transition: all var(--pico-transition);

      &:hover {
        background-color: var(--pico-secondary-hover);
          border-color: var(--pico-secondary-hover);
      }

      &-primary {
        background-color: var(--pico-primary);
          color: var(--pico-primary-inverse);
          border-color: var(--pico-primary);

        &:hover {
          background-color: var(--pico-primary-hover);
            border-color: var(--pico-primary-hover);
        }
      }
    }
  }

  /* MDP JS Widgets: Dropdown Fixes */
  .Select {
    .Select-control {
      position: relative;

      .Select-input {
        position: relative;
        display: flex;
        align-items: center;
        min-height: 1.2em;

        input[role="combobox"] {
          width: 100% !important;
          min-width: 100px;
          box-sizing: border-box !important;
          position: relative !important;
          left: 0 !important;
          top: -10px !important;
          visibility: visible !important;
          height: auto !important;
          overflow: visible !important;
          white-space: normal !important;
          font-size: inherit !important;
          font-family: inherit !important;
          font-weight: inherit !important;
          font-style: inherit !important;
          letter-spacing: inherit !important;
          text-transform: inherit !important;
          padding: var(--pico-form-element-spacing-vertical) var(--pico-form-element-spacing-horizontal);
          border: none;
          background: transparent;
          outline: none;
        }
      }
    }
  }

  /* MDP JS Widgets: Preferences Fields Group Styling */
  .PreferencesFieldsGroup {
    .PreferencesFieldsGroup__option {
      .checkbox {
        label {
          input[type="checkbox"] {
            margin-right: var(--pico-spacing);

            &:not(:checked) {
              background-color: transparent;
              border-color: var(--pico-muted-color);
            }
          }

          .PreferencesFieldsGroup__option-label-content {
            color: var(--pico-contrast-inverse);
              margin-left: calc(var(--pico-spacing) * 0.5);
            font-weight: 500;

            span {
              color: var(--pico-contrast-inverse);
              font-weight: 500;
            }

            .PreferencesFieldsGroup__help {
              color: var(--pico-muted-color);
              font-weight: 400;
              margin-top: calc(var(--pico-spacing) * 0.5);

              p {
                margin: 0;
                font-size: 0.9em;
                line-height: 1.4;
              }
            }
          }
        }
      }
    }
  }

  /* MDP JS Widgets: CheckboxGrid Styling */
  .CheckboxGrid {
    .checkboxes {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: var(--pico-spacing);

      .checkbox {
        label {
          span {
            color: var(--pico-contrast-inverse);
            font-weight: 500;
            line-height: 1.4;
            margin-left: calc(var(--pico-spacing) * 0.5);
          }

          input[type="checkbox"] {
            margin-right: var(--pico-spacing);
            vertical-align: top;
            margin-top: 2px;

            &:not(:checked) {
              background-color: transparent;
              border-color: var(--pico-muted-color);
            }
          }
        }
      }
    }
  }

  /* MDP JS Widgets: Additional Info Styling */
  .AdditionalInfoProfile {
    .control-label {
      color: var(--pico-contrast-inverse) !important;
      font-weight: 500;
      margin-bottom: var(--pico-spacing);
    }
  }

  /* MDP JS Widgets: Profile Form Buttons */
  .MembersDetailsProfile {
    .pull-right {
      display: flex;
      gap: var(--pico-spacing);
      align-items: center;
      justify-content: flex-end;
      width: 100%;
    }

    .pull-right .btn {
      flex: 1;
      margin-left: 0;
      margin-right: 0;
      min-width: 140px;
    }

    .pull-right .btn.pull-left {
      margin-right: var(--pico-spacing);
    }
  }

  .MembersDetailsProfile__section,
  .form-vertical {
    margin: var(--pico-spacing) 0 calc(var(--pico-spacing) * 1.5);
  }

  /* Address */
  .form-vertical {
    .checkboxes-inline {
      display: flex;
      gap: var(--pico-spacing);
      align-items: center;

      .checkbox {
        label {
          display: inline-flex;
          align-items: center;
          gap: calc(var(--pico-spacing) * 0.5);
        }

        input[type="checkbox"] {
          margin: 0;
          vertical-align: middle;
          margin-left: -20px;
          margin-top: -5px;

          &:not(:checked) {
            background-color: transparent;
            border-color: var(--pico-muted-color);
          }
        }

        span {
          color: var(--pico-contrast-inverse);
          font-weight: 500;
          white-space: nowrap;
          line-height: 1.2;
          margin-left: 5px;
        }
      }
    }
  }

  .TypeableResourceForm {
    .btn {
      max-width: 30%;
    }

    .btn.btn-link {
      background-color: var(--pico-secondary);
      color: var(--pico-secondary-inverse);
      border: 1px solid var(--pico-secondary);
      padding: var(--pico-form-element-spacing-vertical) var(--pico-form-element-spacing-horizontal);
      border-radius: var(--pico-border-radius);
      text-decoration: none;
      cursor: pointer;
      transition: all var(--pico-transition);

      &:hover,
      &:focus {
        background-color: var(--pico-secondary-hover);
        border-color: var(--pico-secondary-hover);
        color: var(--pico-secondary-inverse);
        text-decoration: none;
      }
    }
  }
}
